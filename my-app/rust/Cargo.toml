[package]
name = "wasm-game-of-life"
version = "0.1.0"
authors = ["llalma <lhulsmanbenson@gmail.com>"]
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
wasm-bindgen = "0.2.63"
plotters = "^0.3.0"
plotters-canvas = "^0.3.0"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
wee_alloc = "0.4.5"

web-sys = { version = "0.3.39", features = ["HtmlCanvasElement", "console", "HtmlInputElement", "FileList", "File", "Blob"] }
js-sys = "*"

wasm-bindgen-futures = '*'

# For reading CSV
polars-core = "*"
polars-lazy = "*"
getrandom = { version = "*", features = ["js"] }



[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
